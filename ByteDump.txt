******************************* Segment: Default *******************************
******************************** Segment: MAZE *********************************
[Header]
0801: 0c 08     -         .word bend
0803: 0d 00     -         .byte $0d, $00			//;line number
0805: 9e        -         .byte $9E				//;SYS
0806: 20        -         .byte $20				//;space
0807: 32 30 36 34                                      -         .byte $32,$30,$36,$34	//;start 2064
080b: 00        -         .byte $00				//;end of line
080c: 00 00     - bend:   .byte $00, $00			//;end of basic program

[Main]
0810: 78        -         sei							//set interrupt
0811: a9 7f     -         lda #$7f
0813: 8d 0d dc  -         sta CIA_ICR
0816: 8d 0d dd  -         sta CIA2_ICR
0819: ad 0d dc  -         lda CIA_ICR
081c: ad 0d dd  -         lda CIA2_ICR
081f: ad 1a d0  -         lda INTERRUPT_MASK_REGISTER	
0822: 09 01     -         ora #$01
0824: 8d 1a d0  -         sta INTERRUPT_MASK_REGISTER
0827: ad 11 d0  -         lda CONTROL_REGISTER1
082a: 29 7f     -         and #$7f
082c: 8d 11 d0  -         sta CONTROL_REGISTER1
082f: a9 32     -         lda #startRaster
0831: 8d 12 d0  -         sta RASTER_COUNTER
0834: a9 d9     -         lda #<address
0836: 8d 14 03  -         sta IRQVEC
0839: a9 08     -         lda #>address
083b: 8d 15 03  -         sta	IRQVEC+1
083e: 58        -         cli
083f: a9 e0     - begin:  lda	#char
0841: a0 00     -         ldy #0
0843: 99 00 04  - fill:   sta addr,y
0846: 99 00 05  -         sta addr + 256,y
0849: 99 00 06  -         sta addr + 512,y
084c: 99 00 07  -         sta addr + 768,y
084f: c8        -         iny
0850: d0 f1     -         bne fill
0852: a5 c5     - key:    lda LSTX		//get character in A
0854: c9 40     -         cmp #64			//no key
0856: f0 fa     -         beq key
0858: 60        - end:    rts

[Subroutines]
0859: 20 d2 ff  - subs,printSequence:jsr CHROUT
085c: ca        -         dex
085d: d0 fa     -         bne printSequence
085f: 60        -         rts
0860: 86 fb     - printString:stx ZP1			//lo
0862: 84 fc     -         sty	ZP2			//hi
0864: a0 00     - next:   ldy #$00
0866: b1 fb     -         lda (ZP1),y		//load character
0868: c9 00     -         cmp #$00
086a: f0 0d     -         beq	out			//null terminator
086c: 20 d2 ff  -         jsr CHROUT
086f: 18        -         clc
0870: e6 fb     -         inc	ZP1
0872: d0 f0     -         bne	next
0874: e6 fc     -         inc ZP2
0876: 4c 64 08  -         jmp next
0879: 60        - out:    rts
087a: 86 fb     - lenString:stx ZP1			//lo
087c: 84 fc     -         sty	ZP2			//hi
087e: a0 00     -         ldy #$00		
0880: 84 fd     -         sty ZP3			//counter
0882: b1 fb     - next:   lda (ZP1),y		//load character
0884: c9 00     -         cmp #$00
0886: f0 04     -         beq	out			//null terminator
0888: c8        -         iny
0889: 4c 82 08  -         jmp next
088c: 98        - out:    tya
088d: 60        -         rts
088e: a9 00     - rnd_XY: lda #00
0890: 20 9a e0  -         jsr RND
0893: e6 fd     -         inc ZP3
0895: d0 02     -         bne skip1
0897: e6 fe     -         inc ZP4
0899: a5 fd     - skip1:  lda ZP3
089b: 38        -         sec
089c: e5 fb     -         sbc ZP1
089e: 85 fd     -         sta ZP3
08a0: a5 fe     -         lda ZP4
08a2: e5 fc     -         sbc ZP2
08a4: 85 fe     -         sta ZP4			
08a6: a4 fd     - toFloat:ldy ZP3
08a8: a5 fe     -         lda ZP4
08aa: 20 91 b3  -         jsr GIVAYF //A(h),Y(L) - FAC
08ad: a2 d4     -         ldx #<flt
08af: a0 08     -         ldy #>flt
08b1: 20 d4 bb  -         jsr MOVMF	//store FAC to flt
08b4: a9 7f     -         lda #$7f
08b6: 20 9a e0  -         jsr RND
08b9: a9 d4     -         lda #<flt
08bb: a0 08     -         ldy #>flt
08bd: 20 28 ba  -         jsr FMULT
08c0: 20 cc bc  -         jsr FAINT
08c3: 20 bf b1  -         jsr AYINT
08c6: a5 65     -         lda $65			
08c8: 18        -         clc
08c9: 65 fb     -         adc ZP1
08cb: 85 14     -         sta WINT
08cd: a5 64     -         lda $64
08cf: 65 fc     -         adc ZP2
08d1: 85 15     -         sta WINT+1
08d3: 60        - over:   rts

[Data RND]
08d4: 00 00 00 00 00                                   - dataRND,flt:.byte 0,0,0,0,0
08d9: ad 0e 09  - irqcode:lda modeflag
08dc: f0 03     -         beq mode1
08de: 4c f6 08  -         jmp mode2
08e1: a9 01     - mode1:  lda #$01
08e3: 8d 0e 09  -         sta modeflag
08e6: a9 0e     -         lda #LIGHTBLUE
08e8: 8d 20 d0  -         sta BORDER
08eb: a9 32     -         lda #startRaster
08ed: 8d 12 d0  -         sta RASTER_COUNTER
08f0: 0e 19 d0  -         asl INTERRUPT_REQUEST_REGISTER
08f3: 4c 31 ea  -         jmp IRQOUT
08f6: a9 00     - mode2:  lda #$00
08f8: 8d 0e 09  -         sta modeflag
08fb: a9 06     -         lda #BLUE
08fd: 8d 20 d0  -         sta BORDER
0900: a9 fa     -         lda #endRaster
0902: 8d 12 d0  -         sta RASTER_COUNTER
0905: 0e 19 d0  -         asl INTERRUPT_REQUEST_REGISTER
0908: 68        -         pla
0909: a8        -         tay
090a: 68        -         pla
090b: aa        -         tax
090c: 68        -         pla
090d: 40        -         rti

[Data]
090e: 00        - text,data,modeflag:.byte 0
